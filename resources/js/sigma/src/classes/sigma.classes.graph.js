(function(e){"use strict";var i=Object.create(null),s=Object.create(null),n=Object.create(null),o=Object.create(null),h=Object.create(null),t={immutable:!0,clone:!0},d=function(e){return t[e]},g=function(e){var t,r,s;for(t in s={settings:e||d,nodesArray:[],edgesArray:[],nodesIndex:Object.create(null),edgesIndex:Object.create(null),inNeighborsIndex:Object.create(null),outNeighborsIndex:Object.create(null),allNeighborsIndex:Object.create(null),inNeighborsCount:Object.create(null),outNeighborsCount:Object.create(null),allNeighborsCount:Object.create(null)},n)n[t].call(s);for(t in i)r=a(t,s,i[t]),this[t]=r,s[t]=r};function a(r,s,i){return function(){var e,t;for(e in h[r])h[r][e].apply(s,arguments);for(e in t=i.apply(s,arguments),o[r])o[r][e].apply(s,arguments);return t}}function r(e){var t;for(t in e)"hasOwnProperty"in e&&!e.hasOwnProperty(t)||delete e[t];return e}g.addMethod=function(e,t){if("string"!=typeof e||"function"!=typeof t||2!==arguments.length)throw"addMethod: Wrong arguments.";if(i[e]||g[e])throw'The method "'+e+'" already exists.';return i[e]=t,o[e]=Object.create(null),h[e]=Object.create(null),this},g.hasMethod=function(e){return!(!i[e]&&!g[e])},g.attach=function(e,t,r,s){if("string"!=typeof e||"string"!=typeof t||"function"!=typeof r||arguments.length<3||4<arguments.length)throw"attach: Wrong arguments.";var i;if("constructor"===e)i=n;else if(s){if(!h[e])throw'The method "'+e+'" does not exist.';i=h[e]}else{if(!o[e])throw'The method "'+e+'" does not exist.';i=o[e]}if(i[t])throw'A function "'+t+'" is already attached to the method "'+e+'".';return i[t]=r,this},g.attachBefore=function(e,t,r){return this.attach(e,t,r,!0)},g.addIndex=function(e,t){if("string"!=typeof e||Object(t)!==t||2!==arguments.length)throw"addIndex: Wrong arguments.";if(s[e])throw'The index "'+e+'" already exists.';var r;for(r in s[e]=t){if("function"!=typeof t[r])throw"The bindings must be functions.";g.attach(r,e,t[r])}return this},g.addMethod("addNode",function(e){if(Object(e)!==e||1!==arguments.length)throw"addNode: Wrong arguments.";if("string"!=typeof e.id&&"number"!=typeof e.id)throw"The node must have a string or number id.";if(this.nodesIndex[e.id])throw'The node "'+e.id+'" already exists.';var t,r=e.id,s=Object.create(null);if(this.settings("clone"))for(t in e)"id"!==t&&(s[t]=e[t]);else s=e;return this.settings("immutable")?Object.defineProperty(s,"id",{value:r,enumerable:!0}):s.id=r,this.inNeighborsIndex[r]=Object.create(null),this.outNeighborsIndex[r]=Object.create(null),this.allNeighborsIndex[r]=Object.create(null),this.inNeighborsCount[r]=0,this.outNeighborsCount[r]=0,this.allNeighborsCount[r]=0,this.nodesArray.push(s),this.nodesIndex[s.id]=s,this}),g.addMethod("addEdge",function(e){if(Object(e)!==e||1!==arguments.length)throw"addEdge: Wrong arguments.";if("string"!=typeof e.id&&"number"!=typeof e.id)throw"The edge must have a string or number id.";if("string"!=typeof e.source&&"number"!=typeof e.source||!this.nodesIndex[e.source])throw"The edge source must have an existing node id.";if("string"!=typeof e.target&&"number"!=typeof e.target||!this.nodesIndex[e.target])throw"The edge target must have an existing node id.";if(this.edgesIndex[e.id])throw'The edge "'+e.id+'" already exists.';var t,r=Object.create(null);if(this.settings("clone"))for(t in e)"id"!==t&&"source"!==t&&"target"!==t&&(r[t]=e[t]);else r=e;return this.settings("immutable")?(Object.defineProperty(r,"id",{value:e.id,enumerable:!0}),Object.defineProperty(r,"source",{value:e.source,enumerable:!0}),Object.defineProperty(r,"target",{value:e.target,enumerable:!0})):(r.id=e.id,r.source=e.source,r.target=e.target),this.edgesArray.push(r),this.edgesIndex[r.id]=r,this.inNeighborsIndex[r.target][r.source]||(this.inNeighborsIndex[r.target][r.source]=Object.create(null)),this.inNeighborsIndex[r.target][r.source][r.id]=r,this.outNeighborsIndex[r.source][r.target]||(this.outNeighborsIndex[r.source][r.target]=Object.create(null)),this.outNeighborsIndex[r.source][r.target][r.id]=r,this.allNeighborsIndex[r.source][r.target]||(this.allNeighborsIndex[r.source][r.target]=Object.create(null)),(this.allNeighborsIndex[r.source][r.target][r.id]=r).target!==r.source&&(this.allNeighborsIndex[r.target][r.source]||(this.allNeighborsIndex[r.target][r.source]=Object.create(null)),this.allNeighborsIndex[r.target][r.source][r.id]=r),this.inNeighborsCount[r.target]++,this.outNeighborsCount[r.source]++,this.allNeighborsCount[r.target]++,this.allNeighborsCount[r.source]++,this}),g.addMethod("dropNode",function(e){if("string"!=typeof e&&"number"!=typeof e||1!==arguments.length)throw"dropNode: Wrong arguments.";if(!this.nodesIndex[e])throw'The node "'+e+'" does not exist.';var t,r,s;for(delete this.nodesIndex[e],t=0,s=this.nodesArray.length;t<s;t++)if(this.nodesArray[t].id===e){this.nodesArray.splice(t,1);break}for(t=this.edgesArray.length-1;0<=t;t--)this.edgesArray[t].source!==e&&this.edgesArray[t].target!==e||this.dropEdge(this.edgesArray[t].id);for(r in delete this.inNeighborsIndex[e],delete this.outNeighborsIndex[e],delete this.allNeighborsIndex[e],delete this.inNeighborsCount[e],delete this.outNeighborsCount[e],delete this.allNeighborsCount[e],this.nodesIndex)delete this.inNeighborsIndex[r][e],delete this.outNeighborsIndex[r][e],delete this.allNeighborsIndex[r][e];return this}),g.addMethod("dropEdge",function(e){if("string"!=typeof e&&"number"!=typeof e||1!==arguments.length)throw"dropEdge: Wrong arguments.";if(!this.edgesIndex[e])throw'The edge "'+e+'" does not exist.';var t,r,s;for(s=this.edgesIndex[e],delete this.edgesIndex[e],t=0,r=this.edgesArray.length;t<r;t++)if(this.edgesArray[t].id===e){this.edgesArray.splice(t,1);break}return delete this.inNeighborsIndex[s.target][s.source][s.id],Object.keys(this.inNeighborsIndex[s.target][s.source]).length||delete this.inNeighborsIndex[s.target][s.source],delete this.outNeighborsIndex[s.source][s.target][s.id],Object.keys(this.outNeighborsIndex[s.source][s.target]).length||delete this.outNeighborsIndex[s.source][s.target],delete this.allNeighborsIndex[s.source][s.target][s.id],Object.keys(this.allNeighborsIndex[s.source][s.target]).length||delete this.allNeighborsIndex[s.source][s.target],s.target!==s.source&&(delete this.allNeighborsIndex[s.target][s.source][s.id],Object.keys(this.allNeighborsIndex[s.target][s.source]).length||delete this.allNeighborsIndex[s.target][s.source]),this.inNeighborsCount[s.target]--,this.outNeighborsCount[s.source]--,this.allNeighborsCount[s.source]--,this.allNeighborsCount[s.target]--,this}),g.addMethod("kill",function(){this.nodesArray.length=0,this.edgesArray.length=0,delete this.nodesArray,delete this.edgesArray,delete this.nodesIndex,delete this.edgesIndex,delete this.inNeighborsIndex,delete this.outNeighborsIndex,delete this.allNeighborsIndex,delete this.inNeighborsCount,delete this.outNeighborsCount,delete this.allNeighborsCount}),g.addMethod("clear",function(){return this.nodesArray.length=0,this.edgesArray.length=0,r(this.nodesIndex),r(this.edgesIndex),r(this.nodesIndex),r(this.inNeighborsIndex),r(this.outNeighborsIndex),r(this.allNeighborsIndex),r(this.inNeighborsCount),r(this.outNeighborsCount),r(this.allNeighborsCount),this}),g.addMethod("read",function(e){var t,r,s;for(t=0,s=(r=e.nodes||[]).length;t<s;t++)this.addNode(r[t]);for(t=0,s=(r=e.edges||[]).length;t<s;t++)this.addEdge(r[t]);return this}),g.addMethod("nodes",function(e){if(!arguments.length)return this.nodesArray.slice(0);if(1===arguments.length&&("string"==typeof e||"number"==typeof e))return this.nodesIndex[e];if(1!==arguments.length||"[object Array]"!==Object.prototype.toString.call(e))throw"nodes: Wrong arguments.";var t,r,s=[];for(t=0,r=e.length;t<r;t++){if("string"!=typeof e[t]&&"number"!=typeof e[t])throw"nodes: Wrong arguments.";s.push(this.nodesIndex[e[t]])}return s}),g.addMethod("degree",function(e,t){if(t={in:this.inNeighborsCount,out:this.outNeighborsCount}[t||""]||this.allNeighborsCount,"string"==typeof e||"number"==typeof e)return t[e];if("[object Array]"!==Object.prototype.toString.call(e))throw"degree: Wrong arguments.";var r,s,i=[];for(r=0,s=e.length;r<s;r++){if("string"!=typeof e[r]&&"number"!=typeof e[r])throw"degree: Wrong arguments.";i.push(t[e[r]])}return i}),g.addMethod("edges",function(e){if(!arguments.length)return this.edgesArray.slice(0);if(1===arguments.length&&("string"==typeof e||"number"==typeof e))return this.edgesIndex[e];if(1!==arguments.length||"[object Array]"!==Object.prototype.toString.call(e))throw"edges: Wrong arguments.";var t,r,s=[];for(t=0,r=e.length;t<r;t++){if("string"!=typeof e[t]&&"number"!=typeof e[t])throw"edges: Wrong arguments.";s.push(this.edgesIndex[e[t]])}return s}),"undefined"!=typeof sigma?(sigma.classes=sigma.classes||Object.create(null),sigma.classes.graph=g):"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=g),exports.graph=g):this.graph=g}).call(this);