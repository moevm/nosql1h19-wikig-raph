(function(a){"use strict";var u={pointToSquare:function(e){return{x1:e.x-e.size,y1:e.y-e.size,x2:e.x+e.size,y2:e.y-e.size,height:2*e.size}},lineToSquare:function(e){return e.y1<e.y2?e.x1<e.x2?{x1:e.x1-e.size,y1:e.y1-e.size,x2:e.x2+e.size,y2:e.y1-e.size,height:e.y2-e.y1+2*e.size}:{x1:e.x2-e.size,y1:e.y1-e.size,x2:e.x1+e.size,y2:e.y1-e.size,height:e.y2-e.y1+2*e.size}:e.x1<e.x2?{x1:e.x1-e.size,y1:e.y2-e.size,x2:e.x2+e.size,y2:e.y2-e.size,height:e.y1-e.y2+2*e.size}:{x1:e.x2-e.size,y1:e.y2-e.size,x2:e.x1+e.size,y2:e.y2-e.size,height:e.y1-e.y2+2*e.size}},quadraticCurveToSquare:function(e,t){var i=sigma.utils.getPointOnQuadraticCurve(.5,e.x1,e.y1,e.x2,e.y2,t.x,t.y),x=Math.min(e.x1,e.x2,i.x),s=Math.max(e.x1,e.x2,i.x),r=Math.min(e.y1,e.y2,i.y),y=Math.max(e.y1,e.y2,i.y);return{x1:x-e.size,y1:r-e.size,x2:s+e.size,y2:r-e.size,height:y-r+2*e.size}},selfLoopToSquare:function(e){var t=sigma.utils.getSelfLoopControlPoints(e.x,e.y,e.size),i=Math.min(e.x,t.x1,t.x2),x=Math.max(e.x,t.x1,t.x2),s=Math.min(e.y,t.y1,t.y2),r=Math.max(e.y,t.y1,t.y2);return{x1:i-e.size,y1:s-e.size,x2:x+e.size,y2:s-e.size,height:r-s+2*e.size}},isAxisAligned:function(e){return e.x1===e.x2||e.y1===e.y2},axisAlignedTopPoints:function(e){return e.y1===e.y2&&e.x1<e.x2?e:e.x1===e.x2&&e.y2>e.y1?{x1:e.x1-e.height,y1:e.y1,x2:e.x1,y2:e.y1,height:e.height}:e.x1===e.x2&&e.y2<e.y1?{x1:e.x1,y1:e.y2,x2:e.x2+e.height,y2:e.y2,height:e.height}:{x1:e.x2,y1:e.y1-e.height,x2:e.x1,y2:e.y1-e.height,height:e.height}},lowerLeftCoor:function(e){var t=Math.sqrt(Math.pow(e.x2-e.x1,2)+Math.pow(e.y2-e.y1,2));return{x:e.x1-(e.y2-e.y1)*e.height/t,y:e.y1+(e.x2-e.x1)*e.height/t}},lowerRightCoor:function(e,t){return{x:t.x-e.x1+e.x2,y:t.y-e.y1+e.y2}},rectangleCorners:function(e){var t=this.lowerLeftCoor(e),i=this.lowerRightCoor(e,t);return[{x:e.x1,y:e.y1},{x:e.x2,y:e.y2},{x:t.x,y:t.y},{x:i.x,y:i.y}]},splitSquare:function(e){return[[{x:e.x,y:e.y},{x:e.x+e.width/2,y:e.y},{x:e.x,y:e.y+e.height/2},{x:e.x+e.width/2,y:e.y+e.height/2}],[{x:e.x+e.width/2,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width/2,y:e.y+e.height/2},{x:e.x+e.width,y:e.y+e.height/2}],[{x:e.x,y:e.y+e.height/2},{x:e.x+e.width/2,y:e.y+e.height/2},{x:e.x,y:e.y+e.height},{x:e.x+e.width/2,y:e.y+e.height}],[{x:e.x+e.width/2,y:e.y+e.height/2},{x:e.x+e.width,y:e.y+e.height/2},{x:e.x+e.width/2,y:e.y+e.height},{x:e.x+e.width,y:e.y+e.height}]]},axis:function(e,t){return[{x:e[1].x-e[0].x,y:e[1].y-e[0].y},{x:e[1].x-e[3].x,y:e[1].y-e[3].y},{x:t[0].x-t[2].x,y:t[0].y-t[2].y},{x:t[0].x-t[1].x,y:t[0].y-t[1].y}]},projection:function(e,t){var i=(e.x*t.x+e.y*t.y)/(Math.pow(t.x,2)+Math.pow(t.y,2));return{x:i*t.x,y:i*t.y}},axisCollision:function(e,t,i){for(var x=[],s=[],r=0;r<4;r++){var y=this.projection(t[r],e),n=this.projection(i[r],e);x.push(y.x*e.x+y.y*e.y),s.push(n.x*e.x+n.y*e.y)}var h=Math.max.apply(Math,x),o=Math.max.apply(Math,s),a=Math.min.apply(Math,x);return Math.min.apply(Math,s)<=h&&a<=o},collision:function(e,t){for(var i=this.axis(e,t),x=!0,s=0;s<4;s++)x=x&&this.axisCollision(i[s],e,t);return x}};function n(e,t){for(var i=[],x=0;x<4;x++)e.x2>=t[x][0].x&&e.x1<=t[x][1].x&&e.y1+e.height>=t[x][0].y&&e.y1<=t[x][2].y&&i.push(x);return i}function h(e,t){for(var i=[],x=0;x<4;x++)u.collision(e,t[x])&&i.push(x);return i}function y(e,t){var i,x,s=t.level+1,r=Math.round(t.bounds.width/2),y=Math.round(t.bounds.height/2),n=Math.round(t.bounds.x),h=Math.round(t.bounds.y);switch(e){case 0:i=n,x=h;break;case 1:i=n+r,x=h;break;case 2:i=n,x=h+y;break;case 3:i=n+r,x=h+y}return d({x:i,y:x,width:r,height:y},s,t.maxElements,t.maxLevel)}function l(e,t,i){if(i.level<i.maxLevel)for(var x=n(t,i.corners),s=0,r=x.length;s<r;s++)i.nodes[x[s]]===a&&(i.nodes[x[s]]=y(x[s],i)),l(e,t,i.nodes[x[s]]);else i.elements.push(e)}function d(e,t,i,x){return{level:t||0,bounds:e,corners:u.splitSquare(e),maxElements:i||40,maxLevel:x||8,elements:[],nodes:[]}}var e=function(){this._geom=u,this._tree=null,this._cache={query:!1,result:!1},this._enabled=!0};e.prototype.index=function(e,t){if(!this._enabled)return this._tree;if(!t.bounds)throw"sigma.classes.edgequad.index: bounds information not given.";var i,x,s,r,y,n=t.prefix||"";this._tree=d(t.bounds,0,t.maxElements,t.maxLevel);for(var h=e.edges(),o=0,a=h.length;o<a;o++)x=e.nodes(h[o].source),s=e.nodes(h[o].target),y={x1:x[n+"x"],y1:x[n+"y"],x2:s[n+"x"],y2:s[n+"y"],size:h[o][n+"size"]||0},"curve"===h[o].type||"curvedArrow"===h[o].type?x.id===s.id?(r={x:x[n+"x"],y:x[n+"y"],size:x[n+"size"]||0},l(h[o],u.selfLoopToSquare(r),this._tree)):(i=sigma.utils.getQuadraticControlPoint(y.x1,y.y1,y.x2,y.y2),l(h[o],u.quadraticCurveToSquare(y,i),this._tree)):l(h[o],u.lineToSquare(y),this._tree);return this._cache={query:!1,result:!1},this._tree},e.prototype.point=function(e,t){return this._enabled&&this._tree&&function e(t,i){if(i.level<i.maxLevel){var x=(s=t,r=i.bounds,y=r.x+r.width/2,n=r.y+r.height/2,h=s.y<n,o=s.x<y,h?o?0:1:o?2:3);return i.nodes[x]!==a?e(t,i.nodes[x]):[]}return i.elements;var s,r,y,n,h,o}({x:e,y:t},this._tree)||[]},e.prototype.area=function(e){if(!this._enabled)return[];var t,i,x=JSON.stringify(e);if(this._cache.query===x)return this._cache.result;i=u.isAxisAligned(e)?(t=n,u.axisAlignedTopPoints(e)):(t=h,u.rectangleCorners(e));var s=this._tree?function e(t,i,x,s){if(s=s||{},i.level<i.maxLevel)for(var r=x(t,i.corners),y=0,n=r.length;y<n;y++)i.nodes[r[y]]!==a&&e(t,i.nodes[r[y]],x,s);else for(var h=0,o=i.elements.length;h<o;h++)s[i.elements[h].id]===a&&(s[i.elements[h].id]=i.elements[h]);return s}(i,this._tree,t):[],r=[];for(var y in s)r.push(s[y]);return this._cache.query=x,this._cache.result=r},void 0!==this.sigma?(this.sigma.classes=this.sigma.classes||{},this.sigma.classes.edgequad=e):"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=e),exports.edgequad=e):this.edgequad=e}).call(this);